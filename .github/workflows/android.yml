name: e2e-Android
on:
  pull_request:

jobs:
  deduplicate:
    runs-on: macos-latest
    steps:
      - uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          cancel_others: true

  test:
    needs: deduplicate
    runs-on: macos-latest
    # Kill the task if not finished after 60 minutes
    timeout-minutes: 60

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Download Android Emulator Image
      run: |
        echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-28;default;x86"
        echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name Pixel_5_API_31_AOSP --device "Nexus 5X" -k 'system-images;android-28;default;x86'
        $ANDROID_HOME/emulator/emulator -list-avds

    ## configure cash for gradle : will help to reduce build time
    - name: Cache Gradle Wrapper
      uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    - name: Cache node modules
      uses: actions/cache@v3
      id: cache
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('**/package-lock.json') }}
  
    - name: Cache android build folder
      uses: actions/cache@v3
      id: androidcache
      with:
        path: android/app/build
        key: android-app-build-${{ hashFiles('**/ci-build-cache-timestamp.txt') }}

    - name: Rebuild detox from cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: npx detox clean-framework-cache && npx detox build-framework-cache

    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install --legacy-peer-deps

    - name: Secret files dummy
      run: cp env.example .env
    - name: Create keystore.properties file
      env:
        ANDROID_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        ANDROID_ALIAS: ${{ secrets.ANDROID_ALIAS }}
      run: printf 'storePassword=%s\nkeyPassword=%s\nkeyAlias=%s\nstoreFile=release.keystore' "$ANDROID_KEY_STORE_PASSWORD" "$ANDROID_KEY_PASSWORD" "$ANDROID_ALIAS" > android/keystore.properties
    - name: Generate release keystore
      env:
        ANDROID_ALIAS: ${{ secrets.ANDROID_ALIAS }}
        ANDROID_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        keytool -genkeypair -v -noprompt -storetype PKCS12 -keystore release.keystore -alias "$ANDROID_ALIAS" -keyalg RSA -keysize 2048 -validity 10000 -storepass "$ANDROID_KEY_STORE_PASSWORD" -keypass "$ANDROID_KEY_PASSWORD" -dname "CN=mqttserver.ibm.com, OU=ID, O=IBM, L=Hursley, S=Hants, C=GB"
    - name: Move keystore
      run: mv release.keystore android/app/release.keystore
    
    # Needed for Android build, but somehow breaking emulator setup
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'

    - name: Build for detox
      if: steps.androidcache.outputs.cache-hit != 'true'
      run: npm run e2e:build:android

    - name: Android Emulator
      timeout-minutes: 10
      continue-on-error: true
      run: |
        echo "Starting emulator"
        nohup $ANDROID_HOME/emulator/emulator -avd Pixel_5_API_31_AOSP -no-audio -no-snapshot -no-window &
        $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
        $ANDROID_HOME/platform-tools/adb devices
        echo "Emulator started"

    - name: Android Detox
      run: npm run e2e:test:android -- --cleanup --debug-synchronization 500 --take-screenshots failing --record-videos failing -l trace

    - name: Store Detox artifacts on test failure
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: detox-artifacts
        path: artifacts # Default path for Detox artifacts

  notify:
    name: Notify Slack
    needs: test
    if: ${{ success() || failure() }}
    runs-on: macos-latest
    steps:
      - uses: iRoachie/slack-github-actions@v2.3.0
        if: env.SLACK_WEBHOOK_URL != null
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BUILDS_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
